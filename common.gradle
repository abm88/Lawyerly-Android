apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../dependencies.gradle'
apply from: '../shared_dependencies.gradle'
apply from: '../shared_test_dependencies.gradle'
apply from: '../sharedProperties.gradle'


// Loading key store credentials file
def keystorePropertiesFile = rootProject.file("keyStore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

// Loading private app properties
def appFile = rootProject.file("appProperties.properties")
def appProperties = new Properties()
appProperties.load(new FileInputStream(appFile))


android {
    compileSdkVersion app.compileSdkVersion
    buildToolsVersion app.buildToolsVersion
    defaultConfig {
        minSdkVersion app.minSdkVersion
        targetSdkVersion app.targetSdkVersion
        versionCode app.applicationVersionCode
        versionName app.applicationVersionName
        testApplicationId app.applicationId
        resValue "string", "app_name", "Lawyerly"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // to fix some compiling errors for roboelectric library
        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true

    }


    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }

    compileOptions {
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    flavorDimensions 'version'
    productFlavors {
        development {
            dimension = "version"
            resConfigs "en", "xxhdpi"
        }
        play {
            dimension = "version"
        }
    }


    // Sign in credentials
    // To change Sign in credentials go to keyStore.properties
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            buildConfigField("String", "BASE_URL", "${appProperties['releaseBaseUrl']}")
        }
        debug {
            buildConfigField("String", "BASE_URL", "${appProperties['debugBaseUrl']}")
            debuggable true
        }
    }

}
